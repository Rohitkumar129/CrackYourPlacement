class Solution {
public:
    int uniquePathsWithObstacles(vector<vector<int>>& obstacleGri) {
        int m=obstacleGri.size();
        int n=obstacleGri[0].size();
        vector<vector<long long int>> obstacleGrid(m,vector<long long int>(n,0));
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if(obstacleGri[i][j]==1)obstacleGrid[i][j]=-1;
            }
        }
        if(obstacleGrid[m-1][n-1]==-1||obstacleGrid[0][0]==-1)return 0;
        else obstacleGrid[m-1][n-1]=1;
        for(int i=m-1;i>=0;i--){
            for(int j=n-1;j>=0;j--){
                if(obstacleGrid[i][j]!=-1){
                        if(i+1<m&&obstacleGrid[i+1][j]!=-1)obstacleGrid[i][j]+=obstacleGrid[i+1][j];
                        if(j+1<n&&obstacleGrid[i][j+1]!=-1)obstacleGrid[i][j]+=obstacleGrid[i][j+1];
                }
            }
        }
        
        return obstacleGrid[0][0];
    }
};
